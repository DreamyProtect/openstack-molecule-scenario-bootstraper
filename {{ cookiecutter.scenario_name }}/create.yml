{% raw -%}
---
- name: Create
  hosts: localhost
  vars:
    security_group_rules:
      - proto: tcp
        port_range_start: "22"
        port_range_stop: "22"
        cidr: '0.0.0.0/0'
{%- endraw %}
    role_name: "{{ cookiecutter.role_name }}"
{% if cookiecutter.gitlabci_usage == "True" %}
    commit_sha: {% raw %}"{{ lookup('env', 'CI_COMMIT_TAG') | replace('.','_') or lookup('env', 'CI_COMMIT_SHORT_SHA') }}"{% endraw %}
{% elif cookiecutter.giuthubactions_usage == "True" %}
    commit_sha: {% raw %}"{{ lookup('env', 'GITHUB_SHA' }}"{% endraw %}
{% else %}
    commit_sha: local
{% endif %}
{%- raw %}
    keypair_name: "molecule-{{ role_name }}-{{ commit_sha }}-keypair"
    security_group_name: "molecule-{{ role_name }}-{{ commit_sha }}-security-group"
    ssh_key_location: "{{ lookup('env', 'MOLECULE_EPHEMERAL_DIRECTORY') }}/ssh_key"
  tasks:
    - name: "Create a temporary keypair"
      openstack.cloud.keypair:
        state: present
        name: "{{ keypair_name }}"
      register: keypair_return

    - name: "Create temporary private key"
      ansible.builtin.copy:
        dest: "{{ ssh_key_location }}"
        content: "{{ keypair_return.key.private_key }}"
        mode: '0600'

    - name: "Create temporary security group"
      openstack.cloud.security_group:
        state: present
        name: "{{ security_group_name }}"
        description: temporary security group for molecule testing

    - name: "Create security group rules"
      openstack.cloud.security_group_rule:
        state: present
        security_group: "{{ security_group_name }}"
        protocol: "{{ item.proto }}"
        port_range_min: "{{ item.port_range_start }}"
        port_range_max: "{{ item.port_range_stop }}"
        remote_ip_prefix: "{{ item.cidr }}"
        direction: ingress
      with_items: "{{ security_group_rules }}"

    - name: "Create testing instances"
      openstack.cloud.server:
        state: present
        name: "{{ item.name }}-{{ commit_sha }}"
        image: "{{ item.image }}"
        key_name: "{{ keypair_name }}"
        flavor: "{{ item.flavor }}"
        security_groups:
          - "{{ security_group_name }}"
        auto_ip: yes
        network: "{{ item.network }}"
      with_items: "{{ molecule_yml.platforms }}"
      register: instances_infos

    - name: Generate instance_config.yml
      ansible.builtin.template:
        src: instances_config.yml.j2
        dest: "{{ lookup('env', 'MOLECULE_EPHEMERAL_DIRECTORY') }}/instance_config.yml"
        mode: '0644'

    - name: Wait for instances to accept ssh connections
      ansible.builtin.wait_for:
        host: "{{ item.openstack.accessIPv4 }}"
        port: 22
        delay: 10
        state: present
      with_items: "{{ instances_infos.results }}"
{% endraw -%}
